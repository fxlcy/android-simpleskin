apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'AndResGuard'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "cn.fxlcy.simpleskin"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        signingConfig signingConfigs.debug
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }


    }


    signingConfigs {
        debug {
            def keyStoreFileKey = 'keyStore.file'

            def keyStoreFile = (localProperties as Properties).getProperty(keyStoreFileKey)



            if (keyStoreFile == null || keyStoreFile == "") {
                def file = file('../huazhen.jks')
                if (file.exists()) {
                    storeFile file('../huazhen.jks')//签名文件路径
                } else {
                    return
                }
            } else {
                storeFile new File(keyStoreFile)//签名文件路径
            }
            storePassword _storePassword
            keyAlias _keyAlias
            keyPassword _keyPassword//签名密码
        }
    }
}

dependencies {
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    implementation 'com.huazhen.libs:simplelayout:1.0.1', {
        exclude group: 'com.android.support'
    }

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation project(':simpleskin-core')
    implementation project(':hideapiuse')

    compileOnly files('libs/rt.jar')

}


andResGuard {
    def mf = file("mapping/resource_mapping_app-release.txt")
    if (mf.exists()) {
        mappingFile = mf
    }

    // 当你使用v2签名的时候，7zip压缩是无法生效的。
    use7zip = false
    useSign = true
    // 打开这个开关，会keep住所有资源的原始路径，只混淆资源的名字
    keepRoot = false
    whiteList = [
            "R.attr.*"
    ]


    compressFilePattern = [
            "*.png",
            "*.jpg",
            "*.jpeg",
            "*.gif",
            "resources.arsc"
    ]
    sevenzip {
        artifact = 'com.tencent.mm:SevenZip:1.2.9'
        //path = "/usr/local/bin/7za"
    }

    /**
     * 可选： 如果不设置则会默认覆盖assemble输出的apk
     **/
    // finalApkBackupPath = "${project.rootDir}/final.apk"

    /**
     * 可选: 指定v1签名时生成jar文件的摘要算法
     * 默认值为“SHA-1”
     **/
    // digestalg = "SHA-256"
}


def copyMappingTask = task copyMapping(type: Copy) {
    def file = new File(buildDir, "outputs/apk/release/AndResGuard_app-release/resource_mapping_app-release.txt")
    if (file.exists()) {
        def to = new File(projectDir, "mapping")
        copy {
            from file
            into to
        }
    }
}


afterEvaluate {
    tasks.findAll {
        it.name.startsWith("resguard") && it.name.endsWith("Release")
    }.each {
        it.dependsOn copyMappingTask
    }
}

